{"version":3,"sources":["storage.js","Lock.js","AdventCalendar.js","index.js"],"names":["KEY","load","defaults","stored","localStorage","getItem","storedState","JSON","parse","error","Object","objectSpread","Lock","react_default","a","createElement","className","viewBox","transform","d","TODAY","Date","getDate","getArray","value","arguments","length","undefined","Array","fill","getRandomDays","map","n","i","sort","b","Math","random","isLocked","day","AdventCalendar","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","storage","days","visited","images","index","setState","x","window","location","hash","replace","_this2","after","subreddit","getSubreddit","url","concat","fetch","then","r","json","response","data","children","child","filter","test","toConsumableArray","fetchImages","values","setItem","stringify","_this3","addEventListener","_this4","key","data-open","data-locked","onClick","onDayClick","style","backgroundImage","Component","ReactDOM","render","AdventCalendar_AdventCalendar","document","getElementById"],"mappings":"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","file":"static/js/main.e5f7fe75.chunk.js","sourcesContent":["const KEY = 'advent-calendar';\n\nexport const load = defaults => {\n  const stored = localStorage.getItem(KEY);\n  if (stored === null) {\n    return defaults;\n  }\n\n  let storedState = null;\n  try {\n    storedState = JSON.parse(stored);\n  } catch (error) {\n    return defaults;\n  }\n\n  if (typeof storedState !== \"object\") {\n    return defaults;\n  }\n\n  return {\n    ...defaults,\n    ...storedState,\n  };\n};\n\nexport const save = values => {\n  localStorage.setItem(KEY, JSON.stringify(values));\n};\n","import React from \"react\";\n\nexport default () => (\n  <svg className=\"lock\" viewBox=\"0 0 12 17\">\n    <path\n      className=\"lock__path\"\n      transform=\"translate(-4,-273.5)\"\n      d=\"m 10,273.5 c -5.0164424,8e-5 -5,1.90449 -4.9996947,8.50005 L 4,282 v 8.44597 c 4.0590193,-7.1e-4 8.026417,-3.2e-4 12,0 V 282 l -0.999789,5e-5 C 15,275.67748 14.983558,273.50008 10,273.5 Z m -0.021261,1.50025 C 13.516537,275.00025 13.5,276.24577 13.5,282 h -7 c 0,-5.69885 0.016537,-6.99975 3.478739,-6.99975 z\" />\n  </svg>\n);\n","import React, { Component } from \"react\";\nimport * as storage from \"./storage\";\nimport Lock from \"./Lock\";\n\nconst DAYS = 24;\nconst TODAY = (new Date()).getDate();\n\nconst getArray = (value = 0) => (new Array(DAYS)).fill(value);\n\nconst getRandomDays = () => getArray()\n  .map((n, i) => i + 1)\n  .sort((a, b) => Math.random() > 0.5);\n\nconst isLocked = day => day > TODAY;\n\nexport default class AdventCalendar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = storage.load({\n      days: getRandomDays(),\n      visited: getArray(false),\n      images: [],\n    });\n  }\n\n  onDayClick(day, index) {\n    if (isLocked(day)) {\n      return;\n    }\n    this.setState(state => ({\n      visited: state.visited.map((x, i) => i === index ? !x : x),\n    }));\n  }\n\n  getSubreddit() {\n    if (window.location.hash) {\n      return window.location.hash.replace(/#/, \"\");\n    }\n\n    return \"earthporn\";\n  }\n\n  fetchImages(after = null) {\n    if (this.state.images.length >= DAYS) {\n      return;\n    }\n\n    const subreddit = this.getSubreddit();\n    const url = `https://www.reddit.com/r/${subreddit}/top/.json?t=all&limit=100&after=${after}`;\n\n    fetch(url)\n      .then(r => r.json())\n      .then(response => {\n        const images = response.data.children\n          .map(child => child.data.url)\n          .filter(url => /\\.(jpe?g|png|gif)$/i.test(url));\n\n        this.setState(\n          state => ({\n            images: [...state.images, ...images],\n          }),\n          () => {\n            this.fetchImages();\n          }\n        );\n      });\n  }\n\n  componentDidUpdate() {\n    storage.save(this.state);\n  }\n\n  componentDidMount() {\n    this.fetchImages();\n    window.addEventListener(\"hashchange\", () => {\n      this.setState(\n        state => ({\n          images: [],\n          visited: getArray(false),\n        }),\n        () => {\n          this.fetchImages();\n        }\n      );\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"calendar\">\n        {this.state.days.map((day, i) => (\n          <div\n            key={i}\n            className=\"day\"\n            data-open={this.state.visited[i]}\n            data-locked={isLocked(day)}\n            onClick={() => this.onDayClick(day, i)}\n          >\n            <div\n                className=\"day__backside\"\n                style={{ backgroundImage: this.state.images[i] ? `url(${this.state.images[i]})` : null }}\n            />\n            {day}\n            {isLocked(day) ?  <Lock /> : null}\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport AdventCalendar from './AdventCalendar';\n\nReactDOM.render(<AdventCalendar />, document.getElementById('root'));\n"],"sourceRoot":""}